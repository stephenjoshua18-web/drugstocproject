name: Django CI/CD Pipeline

on:
  push:
    branches:
      - staging

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        run: |
          pip install flake8
          flake8 ../django_auth/api/
      - name: Run unit tests
        run: |
          python django_auth/manage.py test  # Run tests inside django_auth

name: Build and Push to ECR

on:
  push:
    branches:
      - staging

jobs:
  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

      - name: Build, Tag, and Push Docker Image
        run: |
          REPOSITORY_NAME=${{ vars.REPOSITORY_NAME }}
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)  # Shorten commit SHA for tagging
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          IMAGE_URI=$ECR_REGISTRY/$REPOSITORY_NAME:$IMAGE_TAG
          
          echo "Building Docker Image..."
          docker build -t $IMAGE_URI -f ../django_auth/Dockerfile ./django_auth
          
          echo "Pushing to ECR..."
          docker push $IMAGE_URI
          
          echo "Tagging latest..."
          docker tag $IMAGE_URI $ECR_REGISTRY/$REPOSITORY_NAME:latest
          docker push $ECR_REGISTRY/$REPOSITORY_NAME:latest

      - name: Output Image URI
        run: echo "Image pushed to: $ECR_REGISTRY/$REPOSITORY_NAME:$IMAGE_TAG"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f ingress.yaml
